<?php require APPROOT.'/views/parts/header.php'; ?>
  <div class="about_header">Задача</div>
  <div class="about_content">
    <div>Разработать простое веб-приложение "Заметки" с использованием PHP, JavaScript, MySQL, HTML и CSS. Приложение должно позволять пользователям создавать, просматривать, редактировать и удалять заметки.</div>
    <div class="about_subheader">Требования к функциональности:</div>
    <div>1. Стартовая страница приложения должна содержать список всех заметок, отсортированных по дате создания (последние заметки вверху).</div>
    <div>2. Пользователь должен иметь возможность создавать новые заметки с указанием заголовка и текста.</div>
    <div>3. Пользователь должен иметь возможность просматривать детали каждой заметки на отдельной странице.</div>
    <div>4. Пользователь должен иметь возможность редактировать заголовок и текст существующей заметки.</div>
    <div>5. Создавать новую заметку по кнопке, не перезагружая страницу с использованием технологии AJAX</div>

    <div class="about_subheader">Требования к интерфейсу:</div>
    <div>1. Используйте HTML и CSS для создания простого и интуитивно понятного интерфейса.</div>
    <div>2. Разместите список заметок на стартовой странице в виде таблицы или списка с кратким отображением заголовков.</div>
    <div>3. При создании новой заметки и редактировании существующей заметки используйте формы.</div>
    <div>4. Используйте JavaScript для добавления динамического поведения, например, для подтверждения удаления заметки.</div>
    <div>5. Список должен иметь разбитие по страницам (погинацию)</div>

    <div class="about_subheader">Требования к базе данных:</div>
    <div>1. Создайте таблицу "notes" в базе данных MySQL для хранения заметок.</div>
    <div>2. Таблица "notes" должна содержать следующие поля: "id" (уникальный идентификатор), "title" (заголовок заметки), "content" (текст заметки), "created_at" (дата создания заметки).</div>

    <div class="about_subheader">Требования к коду:</div>
    <div>1. Реализуйте приложение с использованием чистого PHP и в соответствии с принципами модели MVC (Model-View-Controller).</div>
    <div>2. Обеспечьте безопасность и защиту от SQL-инъекций при работе с базой данных.</div>
    <div>3. Необходимо использовать подготовленные выражения или ORM (Object-Relational Mapping) для работы с базой данных.</div>
  </div>
<?php require APPROOT.'/views/parts/footer.php'; ?>

